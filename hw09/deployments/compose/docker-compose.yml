version: "2.1"
services:
  orderservice:
    image: astrviktor/orderservice:1.0.1
    container_name: orderservice
    hostname: orderservice
    ports:
      - "8000:8000"
    environment:
      ORDERSERVICE_SERVER_HOST: ""
      ORDERSERVICE_SERVER_PORT: "8000"
      ORDERSERVICE_STORAGE_HOST: "postgres"
      ORDERSERVICE_STORAGE_PORT: "5432"
      ORDERSERVICE_STORAGE_SCHEME: "orders"
      ORDERSERVICE_STORAGE_USER: "user"
      ORDERSERVICE_STORAGE_PASSWORD: "password"
      ORDERSERVICE_PAYMENT_HOST: "payment"
      ORDERSERVICE_PAYMENT_PORT: "8001"
      ORDERSERVICE_WAREHOUSE_HOST: "warehouse"
      ORDERSERVICE_WAREHOUSE_PORT: "8002"
      ORDERSERVICE_DELIVERY_HOST: "delivery"
      ORDERSERVICE_DELIVERY_PORT: "8003"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      docker:
        aliases:
          - orderservice

  payment:
    image: astrviktor/payment:1.0.1
    container_name: payment
    hostname: payment
    ports:
      - "8001:8001"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      docker:
        aliases:
          - payment

  warehouse:
    image: astrviktor/warehouse:1.0.1
    container_name: warehouse
    hostname: warehouse
    ports:
      - "8002:8002"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      docker:
        aliases:
          - warehouse

  delivery:
    image: astrviktor/delivery:1.0.1
    container_name: delivery
    hostname: delivery
    ports:
      - "8003:8003"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      docker:
        aliases:
          - delivery

  postgres:
    image: postgres:15.1-bullseye
    container_name: postgres
    environment:
      POSTGRES_DB: "orders"
      POSTGRES_USER: "user"
      POSTGRES_PASSWORD: "password"
      TZ: 'UTC'
      PGTZ: 'UTC'
    volumes:
      - volume_postgres:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      docker:
        aliases:
          - postgres

volumes:
  volume_postgres:

networks:
  docker:
    driver: bridge
